1. Damage Reduction per AC Step

AC 17 → Damage 78

AC 18 → Damage 76

AC 19 → Damage 76

AC 20 → Damage 75

AC 22 → Damage 73

AC 24 → Damage 71

AC 25 → Damage 71

AC 29 → Damage 68

AC 31 → Damage 66

AC 33 → Damage 64

AC 35 → Damage 63

AC 36 → Damage 62

AC 38 → Damage 61

AC 39 → Damage 60

AC 40 → Damage 59

AC 41 → Damage 59

AC 42 → Damage 57

AC 43 → Damage 57

AC 44 → Damage 56

AC 45 → Damage 55

AC 47 → Damage 54

AC 49 → Damage 52

AC 50 → Damage 52

2. Observed Pattern

Damage generally drops by 1 point every 1–2 AC increases.

Sometimes you get “plateaus” (e.g., AC 18–19 both gave 76 damage, AC 24–25 both gave 71).

Other times the reduction kicks in quickly (e.g., AC 41–42 dropped from 59 → 57).

This means the scaling isn’t perfectly smooth linear, but it’s close to linear on average.

3. Approximate Scaling Rate

From AC 17 (78 dmg) to AC 50 (52 dmg):

Damage reduced = 26 points

AC increased = 33 points

Average rate ≈ 0.79 damage reduction per AC point.

So practically, every 1 AC reduces incoming damage by about 0.8 points, but rounded into whole numbers with plateaus.

4. Likely Formula

The game is probably doing something like:

DamageTaken = BaseDamage – floor(AC / X)


where X ≈ 1.25–1.3, which explains why some AC steps don’t reduce damage until the division crosses an integer threshold.

✅ Answer to your question:
AC scaling is almost linear, with diminishing steps caused by integer rounding. Roughly, every +1 AC shaves off 0.8 damage from incoming hits. Over the long run, it works out very close to linear, but expect plateaus where an extra point of AC does nothing until you “cross the threshold.”

Do you want me to chart AC vs. damage taken so you can visually see the step pattern?
