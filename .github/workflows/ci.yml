name: CI

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/setup.cfg', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (adaptive)
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install -U pip wheel

          # Use requirements files if present
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi

          # Try to install the package (and dev extras) if project is installable
          if [ -f pyproject.toml ] || [ -f setup.py ] || [ -f setup.cfg ]; then
            pip install ".[dev]" || pip install .
          fi

          # Ensure pytest exists regardless of how we installed deps
          if ! python -c "import pytest" 2>/dev/null; then
            python -m pip install pytest
          fi


      # Set PYTHONPATH for src/ layout if package wasn't installed
      - name: Set PYTHONPATH (src layout fallback)
        if: ${{ !hashFiles('**/pyproject.toml', '**/setup.py', '**/setup.cfg') }}
        run: echo "PYTHONPATH=./src" >> $GITHUB_ENV

      - name: Run smoke tests
        run: pytest -q -k smoke

      - name: Upload pytest log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-smoke-output
          path: .
          if-no-files-found: ignore

      - name: Run UI wrap probe (non-interactive)
        run: |
          python -m mutants <<'EOF'
          logs trace ui on
          logs probe wrap --count 24 --width 80
          logs tail 1
          EOF

      - name: Guard against hyphen wrap regression
        run: |
          chmod +x scripts/guard_wrap.py || true
          ./scripts/guard_wrap.py

